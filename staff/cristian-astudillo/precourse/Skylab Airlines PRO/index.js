/*PROYECTO TEMA 2 : Skylab Airlines! ‚úàÔ∏èüõ©

Programa una interfaz de usuario para una aerol√≠nea (por terminal...).
Esta aerol√≠nea dispondr√° de 10 vuelos para el d√≠a de hoy, para empezar,
estos vuelos deben estar declarados de manera global,
cuando se llame a la funci√≥n:
- Se preguntar√° por el nombre de usuario y dar√° la bienvenida.
- El usuario visualizar√° todos los vuelos disponibles de una forma amigable: 
  El vuelo con origen: Barcelona, y destino: Madrid tiene un coste de XXXX‚Ç¨ y no realiza ninguna escala.
- A continuaci√≥n, el usuario ver√° el coste medio de los vuelos.
- Tambi√©n podr√° ver cu√°ntos vuelos efect√∫an escalas.
- Sabiendo que los √∫ltimos 5 vuelos (los √∫ltimos 5 ID's) son los √∫ltimos del d√≠a, muestra al usuario sus destinos.


PRO:
Despu√©s de ver toda la informaci√≥n el programa pedir√° al usuario si es ADMIN/USER, dependiendo de la elecci√≥n, 
el programa se comportar√° de la siguiente manera:
Si eres ADMIN, la funci√≥n deber√≠a permitir:
- Poder crear, m√°s vuelos, pidiendo la informaci√≥n por prompt(), sin poder pasar de 15 vuelos, si se intenta introducir uno m√°s, saltar√° un alert(). 
- Poder eliminar vuelos mediante el ID.

Si eres USER la funci√≥n deber√≠a permitir:
- Buscar por precio (m√°s alto, m√°s bajo o igual), el usuario deber√≠a mostrar los datos de los vuelos encontrados e,
  indicando el ID, el programa responder√°: "Gracias por su compra, vuelva pronto."
*/

var flights = [
    { id: 00, to: 'Bilbao', from: 'Barcelona', cost: 1600, scale: false },
    { id: 01, to: 'New York', from: 'Barcelona', cost: 700, scale: false },
    { id: 02, to: 'Los Angeles', from: 'Madrid', cost: 1100, scale: true },
    { id: 03, to: 'Paris', from: 'Barcelona', cost: 210, scale: false },
    { id: 04, to: 'Roma', from: 'Barcelona', cost: 150, scale: false },
    { id: 05, to: 'London', from: 'Madrid', cost: 200, scale: false },
    { id: 06, to: 'Madrid', from: 'Barcelona', cost: 90, scale: false },
    { id: 07, to: 'Tokyo', from: 'Madrid', cost: 1500, scale: true },
    { id: 08, to: 'Shangai', from: 'Barcelona', cost: 800, scale: true },
    { id: 09, to: 'Sydney', from: 'Barcelona', cost: 150, scale: true },
    { id: 10, to: 'Tel-Aviv', from: 'Madrid', cost: 150, scale: false }
];

//console.log(flights[0].to); //Bilbao


//PREGUNTA AL USUARIO O PASAJERO SI ES ADMIN O USER.
function adminOUsuario(){
var adminOrUser = prompt('Hola pasajero.... Bienvenido a Skylab Airlines... D√≠ganos si es ADMIN O USER.');
var regexAdmin = /admin/gi;
var regexUser = /user/gi;

    if(!isNaN(adminOrUser) || adminOrUser === '' || adminOrUser === null){
    var continuar3 = confirm('Desea continuar?');
        if(continuar3){
            adminOUsuario();
                } else {
                return alert('Hasta luego, que tenga un buen d√≠a!!....');
                }
    }

    if(regexAdmin.test(adminOrUser)){
        admin();    
        } else if (regexUser.test(adminOrUser)){
            user();        
        }
}

adminOUsuario();


//ADMIN
//CREAR Y ELIMINAR VUELOS.
function admin(){
        //PREGUNTA AL USUARIO SI DESEA SEGUIR CREANDO M√ÅS VUELOS.
    function continuar(){   
        var continuar = confirm('Desea seguir creando m√°s vuelos?');
        if(continuar){      
            crearVuelos(); 
        } else {        
            return alert('Gracias por confiar en Skylab Airlines... '); 
        }
    }
   
    //INSERTAR NUMERO DE ID
    function crearVuelos(){

     //M√ÅXIMO 15 VUELOS.
    if(flights.length === 15){              
        alert('Lo sentimos... no puede crear m√°s vuelos, ha superado el l√≠mite, el m√°ximo son 15 vuelos.');
            return alert('Gracias por confiar en Skylab Airlines... '); 
    }

        //INSERTAR N√öMERO ID.
        function numeroID(){    
        alert('A continuaci√≥n, para crear un vuelo, se pedir√°n los siguientes datos:')
        var insert = prompt('Ingrese un n√∫mero de ID');    
        insert = parseInt(insert)    
        if(isNaN(insert) || insert === '' || insert ===  null){        
        var insert = prompt('Por favor, ingrese un m√°ximo de 2 n√∫meros.');
            if(insert === null || insert === ''){                
                return alert('Hasta luego, que tenga un buen d√≠a!!....');
            }          
        }
             //INSERTAR CUIDAD ORIGEN.    
            function ciudadOrigen(){
            var origen = prompt('Ingrese la cuidad de origen.');
                if(!isNaN(origen) || origen === '' || origen === null){   
                    var origen = prompt('Por favor, ingrese una cuidad de origen.');
                    if(origen === null || origen === ''){              
                        return alert('Hasta luego, que tenga un buen d√≠a!!....');
                    }   
                }            

                // //INSERTAR CUIDAD DESTINO
                function cuidadDestino(){
                var destino = prompt('Ingrese la cuidad de destino.');
                    if(!isNaN(destino) || destino === '' || destino === null){      
                    var destino = prompt('Por favor, ingrese la ciudad del destino.');
                        if(destino === null || destino === ''){      
                            return alert('Hasta luego, que tenga un buen d√≠a!!....');
                        } 
                    }    
    
         
                    // INSERTAR PRECIO VUELO.    
                    function precioVuelo(){
                    var precio = prompt('Ingrese un precio para el vuelo creado.');
                    precio = parseInt(precio);
                        if(isNaN(precio) || precio === '' || precio === null){
                        var precio = prompt('Por favor, ingrese el precio del vuelo.');
                            if(precio === null || precio === ''){      
                                return alert('Hasta luego, que tenga un buen d√≠a!!....');
                            } 
                        }     

                        // INSERTAR ESCALA.
                        function escala(){
                        var escala = confirm('Desea tener el vuelo con escala?');
                        if(escala){
                            escala = true;
                        } else {
                            escala = false;
                        }                           
                           
                            //VUELO CREADO.
                            var newFlight = {
                            id : insert,
                            to : origen,
                            from :destino, 
                            cost: precio,
                            scale: escala    
                            }

                            flights.push(newFlight);    
                            alert(JSON.stringify(flights));

                            continuar();

                            var borrarVuelo = confirm('Desea eliminar este o alg√∫n vuelo?');
                            if(borrarVuelo){
                                eliminarVueloID();                                
                            } else {
                                return alert('Hasta luego, que tenga un buen d√≠a!!....');
                            } 


                            //ELIMINAR VUELOS MEDIANTE ID.
                            function eliminarVueloID(){   

                                function eliminar(){    
                                 //PREGUNTA AL USUARIO POR N√öMERO DE ID(REVISAR SI N√öMERO DE ID ES DISTINTO)       
                                var vuelo2 = prompt('Ingrese n√∫mero de ID para verificar el vuelo.');
                                vuelo2 = parseInt(vuelo2);   
                                flights.find(function(numeroID){
                                    if(numeroID.id === vuelo2){
                                        return alert(JSON.stringify(numeroID));     
                                    }     
                                }); 
                                    var eliminar = confirm('Desea eliminar este vuelo?');
                                    if(eliminar){      
                                        for(var i = 0; i < flights.length; i++){
                                            if(flights[i].id === vuelo2){
                                                flights.splice(i,1);
                                                    break;
                                            }
                                        }
    
                                    alert(JSON.stringify(flights));
                                        return alert('Vuelo eliminado... Gracias por confiar en Skylab Airlines...  ');
                                    }        

                                    if (!eliminar){
                                        return alert('Este vuelo no ha sido eliminado... Hasta luego, que tenga un buen d√≠a!!....');
                                    }                                                                   
                                    
                                }
                                eliminar()   
                            }
                            //eliminarVueloID();   
                        }
                        escala();    
                    }
                    precioVuelo();                        
                }
                cuidadDestino();       
            }
            ciudadOrigen();                 
        }    
        numeroID();            
    }
    crearVuelos();
}


//USER
//BUSCAR POR PRECIO Y COMPRAR VUELOS.
function user(){
    var total = [];

    function preguntar(){
        var dinero = prompt('D√≠ganos el dinero que tiene disponible para comprar un vuelo.');
        var dinero = parseInt(dinero);  
        if(dinero){
            vuelosDisponibles();
        }

        if (isNaN(dinero) || dinero === '' || dinero ===  null){
            var continuar2 = confirm('Por favor, d√≠ganos el dinero que tiene disponible para comprar un vuelo... Desea continuar?'); 
            if(continuar2){
               preguntar()
            } else {
                return alert('Hasta luego, que tenga un buen d√≠a!!....');
            } 
        }
      
        //VUELOS DISPONIBLES.
        function vuelosDisponibles(){
        
        alert('A continuaci√≥n, estos son los vuelos disponibles :');
        var precios = flights.filter((precio)=>(precio.cost <= dinero));       

    
        //PRECIOS VUELO(BARATO A CARO)
        var precioVuelo = precios.sort(function(precio1, precio2) {
            return precio1.cost - precio2.cost;
        }); 
    
        total.push(precioVuelo);
            for(let prices in precioVuelo){ 
                if(precioVuelo[prices].scale === true){
                alert(`El ID ${prices} tiene sus vuelos desde ${precioVuelo[prices].to.toUpperCase()} hasta ${precioVuelo[prices].from.toUpperCase()} con un precio de ${precioVuelo[prices].cost} ‚Ç¨ CON ESCALA.`);
                } else {
                    alert(`El ID ${prices} tiene sus vuelos desde ${precioVuelo[prices].to.toUpperCase()} hasta ${precioVuelo[prices].from.toUpperCase()} con un precio de ${precioVuelo[prices].cost} ‚Ç¨ SIN ESCALA.`);
                }
            }  
                
        }     

        //INDICAR ID
        function indicarID(){
        var numeroID = prompt('Ingrese el n√∫mero de ID');
        var numeroID = parseInt(numeroID);
            if(numeroID){
            comprarVuelo();
            }

                if(isNaN(numeroID) || numeroID === '' || numeroID === null){
                    var seguir2 = confirm('Por favor, d√≠ganos el n√∫mero de ID para comprar el vuelo disponible... Desea continuar?');
                    if(seguir2){
                    indicarID();
                    } else {
                        return alert('Hasta luego, que tenga un buen d√≠a!!....');
                    }        
                }

    
            function comprarVuelo(){
            const total = flights.find(numeroVuelo => numeroVuelo.id === numeroID);
            alert(JSON.stringify(total));
            var comprar = confirm('Desea comprar este vuelo?');
                if(comprar){
                    alert('Ha comprado el vuelo escogido.' + JSON.stringify(total))
                        alert('Gracias por su compra, vuelva pronto.... Gracias por confiar en Skylab Airlines... ')           
                } else {
                    alert('Hasta luego, que tenga un buen d√≠a!!....');        
                }

            }
        }
        indicarID()  
    }  
    preguntar()            
}

















































  




 







